/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

public void buttonResetClick(GButton source, GEvent event) { //_CODE_:buttonReset:770286:
    reset();
} //_CODE_:buttonReset:770286:

public void buttonPlayClick(GButton source, GEvent event) { //_CODE_:buttonPlay:715536:
    togglePause();
} //_CODE_:buttonPlay:715536:

public void pxPerStepSliderChange(GCustomSlider source, GEvent event) { //_CODE_:pxPerStepSlider:885093:
    pxPerStep = pxPerStepSlider.getValueI();
    robot1.offsetStep(pxPerStep);
    robot2.offsetStep(pxPerStep);
} //_CODE_:pxPerStepSlider:885093:

public void robotStartSliderChange(GCustomSlider source, GEvent event) { //_CODE_:robotStartSlider:860804:
    robotStartX = robotStartSlider.getValueI();
    robot1.origin = robotStartX;
    robot2.origin = robotStartX;
} //_CODE_:robotStartSlider:860804:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("Sketch Window");
  buttonReset = new GButton(this, 1025, 560, 80, 30);
  buttonReset.setText("Reset");
  buttonReset.setLocalColorScheme(GCScheme.RED_SCHEME);
  buttonReset.addEventHandler(this, "buttonResetClick");
  buttonPlay = new GButton(this, 1145, 560, 80, 30);
  buttonPlay.setText("Play/Pause");
  buttonPlay.addEventHandler(this, "buttonPlayClick");
  pxPerStepSlider = new GCustomSlider(this, 1025, 285, 200, 40, "grey_blue");
  pxPerStepSlider.setShowValue(true);
  pxPerStepSlider.setShowLimits(true);
  pxPerStepSlider.setLimits(15, 1, 50);
  pxPerStepSlider.setNumberFormat(G4P.INTEGER, 0);
  pxPerStepSlider.setLocalColorScheme(GCScheme.SCHEME_15);
  pxPerStepSlider.setOpaque(false);
  pxPerStepSlider.addEventHandler(this, "pxPerStepSliderChange");
  label1 = new GLabel(this, 1025, 270, 120, 20);
  label1.setText("Step Size (px)");
  label1.setLocalColorScheme(GCScheme.SCHEME_15);
  label1.setOpaque(false);
  robotStartSlider = new GCustomSlider(this, 1025, 350, 200, 40, "grey_blue");
  robotStartSlider.setShowValue(true);
  robotStartSlider.setShowLimits(true);
  robotStartSlider.setLimits(500, 0, 1000);
  robotStartSlider.setNumberFormat(G4P.INTEGER, 0);
  robotStartSlider.setLocalColorScheme(GCScheme.GREEN_SCHEME);
  robotStartSlider.setOpaque(false);
  robotStartSlider.addEventHandler(this, "robotStartSliderChange");
}

// Variable declarations 
// autogenerated do not edit
GButton buttonReset; 
GButton buttonPlay; 
GCustomSlider pxPerStepSlider; 
GLabel label1; 
GCustomSlider robotStartSlider; 
